name: Publish package

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish (relative path from repo root)'
        required: true
        type: choice
        options:
          - dotnet/Observability.Nuget
          - dotnet/Messing.Nuget
          - nest/observability-npm
          - nest/messing-npm
      version:
        description: 'Exact version to publish (e.g. 1.2.3)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Git user (for version commit)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Detect package type
        id: detect
        run: |
          if [[ "${{ github.event.inputs.package }}" == dotnet/* ]]; then
            echo "type=dotnet" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.package }}" == nest/* ]]; then
            echo "type=npm" >> $GITHUB_OUTPUT
          else
            echo "Unknown package type"; exit 1
          fi

      # ---------- Set version manually ----------
      - name: Set .NET version
        if: steps.detect.outputs.type == 'dotnet'
        working-directory: ${{ github.event.inputs.package }}
        run: |
          # update <Version> tag in the main csproj
          csproj=$(find . -maxdepth 1 -name "*.csproj" | head -n1)
          echo "Updating $csproj to version ${{ github.event.inputs.version }}"
          dotnet tool install --global dotnet-version-cli --version 1.*
          export PATH="$PATH:~/.dotnet/tools"
          dotnet version set ${{ github.event.inputs.version }} --file "$csproj" --skip-commit

      - name: Set npm version
        if: steps.detect.outputs.type == 'npm'
        working-directory: ${{ github.event.inputs.package }}
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Commit version change
        run: |
          git add ${{ github.event.inputs.package }}
          git commit -m "chore: set ${{ github.event.inputs.package }} version to ${{ github.event.inputs.version }} [skip ci]"
          git push

      # ---------- Publish .NET NuGet ----------
      - name: Setup .NET
        if: steps.detect.outputs.type == 'dotnet'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Publish NuGet to GitHub Packages
        if: steps.detect.outputs.type == 'dotnet'
        working-directory: ${{ github.event.inputs.package }}
        run: |
          dotnet pack -c Release /p:PackageVersion=${{ github.event.inputs.version }}
          dotnet nuget push "bin/Release/*.nupkg" \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      # ---------- Publish NPM ----------
      - name: Setup Node.js
        if: steps.detect.outputs.type == 'npm'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'

      - name: Publish to GitHub npm registry
        if: steps.detect.outputs.type == 'npm'
        working-directory: ${{ github.event.inputs.package }}
        run: |
          npm install
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
